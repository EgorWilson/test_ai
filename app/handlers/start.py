import os
from aiogram import Router, types, F
from aiogram.filters import Command
from aiogram.types import FSInputFile

from data.database import add_user

from app.keyboards import *

router = Router()

#–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
@router.message(Command('start'))
async def start(message: types.Message):
    add_user(message.from_user.id)

    photo_start = os.path.join("image", "startovaia.jpg")
    await message.answer_photo(
        photo=FSInputFile(photo_start),
        caption='–ü—Ä–∏–≤–µ—Ç! –î–∞–≤–∞–π –∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è üòä\n'
                '–ú—ã ‚Äî –í–æ–≤–∞, –ê—Ä—Ç—É—Ä –∏ –û–ª–µ–≥, —Å–æ–∑–¥–∞—Ç–µ–ª–∏ –ß–∏–∑.\n'
                'üßÄ –ß–ò–ó –ò–ò ‚Äî —ç—Ç–æ –Ω–µ–π—Ä–æ—Å–µ—Ç—å, –∫–æ—Ç–æ—Ä–∞—è —Å–æ–∑–¥–∞—ë—Ç –∫—Ä—É—Ç—ã–µ —Ñ–æ—Ç–æ —Å –≤–∞—à–∏–º –ª–∏—Ü–æ–º, '
                '–æ—Ç—Ä–∞–∂–∞–µ—Ç –ª—É—á—à–∏–µ —á–µ—Ä—Ç—ã –∏ —Ä–∞—Å–∫—Ä—ã–≤–∞–µ—Ç —Ç–≤–æ—Ä—á–µ—Å–∫–∏–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª!\n\n'
                'üí° –†–∞–∑ —É–∂ –≤—ã –∑–¥–µ—Å—å –ø–æ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏, —Ä–∞—Å—Å–∫–∞–∂–µ–º, –∫–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç!',
        reply_markup=start_kb,
        parse_mode="Markdown"
    )

#–ü—Ä–∏–º–µ—Ä—ã —Ä–∞–±–æ—Ç
@router.callback_query(F.data == 'example')
async def callback_example(callback_query: types.CallbackQuery):
    photo_example = os.path.join("image", "example.jpg")

    await callback_query.message.answer_photo(
        photo=FSInputFile(photo_example),
        caption='üî• –í–æ—Ç –ø—Ä–∏–º–µ—Ä—ã —Ç–æ–≥–æ, —á—Ç–æ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –¥–µ–ª–∞–µ—Ç –ß–ò–ó –ò–ò!\n\n'
                '–≠—Ç–æ —Ä–∞–±–æ—Ç—ã –æ–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ —á–∞—Ç–∞.\n\n'
                'üì∏ –ü—Ä–æ—Å—Ç–æ –∑–∞–≥—Ä—É–∂–∞–µ—à—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–≤–æ–∏—Ö —Ñ–æ—Ç–æ –∏–∑ —Ñ–æ—Ç–æ–ø–ª–µ–Ω–∫–∏, '
                '–ò–ò –æ–±—É—á–∞–µ—Ç—Å—è —Ç–≤–æ–µ–º—É –∞–≤–∞—Ç–∞—Ä—É –∏ –∑–∞—Ç–µ–º —Ä–æ–∂–¥–∞—é—Ç—Å—è —Ñ–∞–Ω—Ç–∞—Å—Ç–∏—á–µ—Å–∫–∏–µ –æ–±—Ä–∞–∑—ã —Å —Ç–æ–±–æ–π!',
        reply_markup=example_kb,
        parse_mode="Markdown"
    )
    await callback_query.answer()


#–î–µ–º–æ—Å–Ω—Ç—Ä–∞—Ü–∏—è –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç–∏
@router.callback_query(F.data == 'demonstration')
async def callback_example(callback_query: types.CallbackQuery):
    photo_demonstration = os.path.join("image", "demonstration.jpg")

    await callback_query.message.answer_photo(
        photo=FSInputFile(photo_demonstration),
        caption='üåü –£–∂–µ –±–æ–ª–µ–µ 1 000 000 —á–µ–ª–æ–≤–µ–∫ –ø–æ–ø—Ä–æ–±–æ–≤–∞–ª–∏ –ß–ò–ó –ò–ò! –¢–µ–ø–µ—Ä—å –≤–∞—à–∞ –æ—á–µ—Ä–µ–¥—å!\n\n'
                'üé≠üßû‚Äç‚ôÇÔ∏è –î–≤–∞ —Ä–µ–∂–∏–º–∞ –Ω–∞ –≤—ã–±–æ—Ä:\n'
                '1Ô∏è‚É£ –ì–æ—Ç–æ–≤—ã–µ –∏–¥–µ–∏ ‚Äî 100+ —Å—Ç–∏–ª–µ–π: –æ—Ç –±–æ–≥–µ–º–Ω—ã—Ö –æ–±—Ä–∞–∑–æ–≤ –¥–æ —Ä–æ–∫-–∑–≤–µ–∑–¥—ã!\n'
                '2Ô∏è‚É£ –†–µ–∂–∏–º –ë–æ–≥–∞ ‚Äî –ø—Ä–æ—Å—Ç–æ –æ–ø–∏—à–∏—Ç–µ –∂–µ–ª–∞–µ–º—ã–π –æ–±—Ä–∞–∑ –∏–ª–∏ —Å–∫–∏–¥—ã–≤–∞–µ—à—å —Ñ–æ—Ç–æ —Ä–µ—Ñ–µ—Ä–µ–Ω—Å,'
                ' –∞ –ò–ò —Å–æ–∑–¥–∞—Å—Ç —É–Ω–∏–∫–∞–ª—å–Ω—É—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é!\n\n'
                '‚ú® –¢–µ–ø–µ—Ä—å –∫ –≤–æ–ª—à–µ–±—Å—Ç–≤—É. –¢–∞–∫ –∫–∞–∫ –≤—ã –ø—Ä–∏—à–ª–∏ –ø–æ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏, –¥–ª—è –≤–∞—Å —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è!',
        reply_markup=price_kb,
        parse_mode="Markdown"
    )
    await callback_query.answer()

#–¶–µ–Ω–∞ –∏ —Ä–µ–∂–∏–º—ã —Ä–∞–±–æ—Ç
@router.callback_query(F.data == 'price')
async def callback_example(callback_query: types.CallbackQuery):
    photo_price = os.path.join("image", "price_photo.jpg")

    await callback_query.message.answer_photo(
        photo=FSInputFile(photo_price),
        caption='üí• –°–∫–∏–¥–∫–∞ 73%!\n\n'
                'üí∞ 1390‚ÇΩ –≤–º–µ—Å—Ç–æ 5150‚ÇΩ\n\n'
                'üì¶ –í –ø–∞–∫–µ—Ç –≤—Ö–æ–¥–∏—Ç:\n‚úÖ 90 —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π\n‚úÖ 100 —Å—Ç–∏–ª–µ–π –Ω–∞ –≤—ã–±–æ—Ä'
                '‚úÖ 1 –º–æ–¥–µ–ª—å –∞–≤–∞—Ç–∞—Ä–∞\n‚úÖ –†–µ–∂–∏–º –ë–æ–≥–∞\n‚úÖ –ö–∞–Ω–∞–ª —Å 5.000 –∏–¥–µ–π\nüí¨ –ß–∞—Ç —Å —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏\n\n'
                '‚è≥ –ë–æ–Ω—É—Å! –ü—Ä–∏ –æ–ø–ª–∞—Ç–µ –≤ —Ç–µ—á–µ–Ω–∏–µ 30 –º–∏–Ω—É—Ç ‚Äî –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ 10 –≥–µ–Ω–µ—Ä–∞—Ü–∏–π –≤ –ø–æ–¥–∞—Ä–æ–∫! üéÅ',
        reply_markup=oplata_kb,
        parse_mode="Markdown"
    )

    await callback_query.answer()


#–û–ü–õ–ê–¢–ê –í –†–£–ë–õ–Ø–•
@router.callback_query(F.data == 'oplata_rf')
async def message_oplata_rf(callback_query: types.CallbackQuery):
    await callback_query.message.answer('–û–ø–ª–∞—Ç–∞ –≤ —Ä–æ—Å—Å–∏–π—Å–∫–∏—Ö —Ä—É–±–ª—è—Ö üá∑üá∫\n\n'
                         'üîÅ –û–ø–ª–∞—Ç–∏—Ç—å –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –∫–∞—Ä—Ç–æ–π –±–∞–Ω–∫–∞ –†–§.\n\n'
                         'üëá –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –æ–ø–ª–∞—Ç—É üëá', reply_markup=pay_kb_ru)
    await callback_query.answer()

#–û–ü–õ–ê–¢–ê –í –î–û–õ–õ–ê–†–ê–• –°–®–ê(USD)
@router.callback_query(F.data == 'oplata_stripe')
async def message_oplata_rf(callback_query: types.CallbackQuery):
    await callback_query.message.answer('–û–ø–ª–∞—Ç–∞ –≤ –¥–æ–ª–ª–∞—Ä–∞—Ö –°–®–ê (USD) üá∫üá∏\n\n'
                         'üîÅüîÅ –ù–µ –≤–æ–ª–Ω—É–π—Ç–µ—Å—å, –µ—Å–ª–∏ –≤–∞–ª—é—Ç–∞ –≤–∞—à–µ–π –∫–∞—Ä—Ç—ã –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è - '
                                        '–±–∞–Ω–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç —Å—É–º–º—É.\n\n'
                         'üëá –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –æ–ø–ª–∞—Ç—É üëá', reply_markup=pay_kb_stripe)
    await callback_query.answer()


#–û–ü–õ–ê–¢–ê –í Lava (–≤ $)
@router.callback_query(F.data == 'oplata_lava')
async def message_oplata_rf(callback_query: types.CallbackQuery):
    await callback_query.message.answer('–£–∫–∞–∂–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–∞—à email\n\n'
                                        '(—ç—Ç–æ–≥–æ –ø—Ä–æ—Å–∏—Ç –ø–ª–∞—Ç–µ–∂–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞)', reply_markup=pay_kb_lava)
    await callback_query.answer()